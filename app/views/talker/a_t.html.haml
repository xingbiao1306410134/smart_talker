
%button{onclick:"startRecording(this);"} record
%button{onclick:"stopRecording(this);",disabled:'disabled'} stop

Recordings
%ul{id:"recordingslist"}

%h2 Log
%pre{id:"log"}

:javascript
  function __log(e, data) {
    log.innerHTML += "\n" + e + " " + (data || '');
  }

  var audio_context;
  var recorder;

  function startUserMedia(stream) {
    var input = audio_context.createMediaStreamSource(stream);
    __log('Media stream created.');

    // Uncomment if you want the audio to feedback directly
    //input.connect(audio_context.destination);
    //__log('Input connected to audio context destination.');

    recorder = new Recorder(input);
    __log('Recorder initialised.');
  }

  function startRecording(button) {
    recorder && recorder.record();
    button.disabled = true;
    button.nextElementSibling.disabled = false;
    __log('Recording...');
  }

  function stopRecording(button) {
    recorder && recorder.stop();
    button.disabled = true;
    button.previousElementSibling.disabled = false;
    __log('Stopped recording.');

    // create WAV download link using audio data blob
    createDownloadLink();

    recorder.clear();
  }

  function createDownloadLink() {
    recorder && recorder.exportWAV(function(blob) {
      var url = URL.createObjectURL(blob);
      var li = document.createElement('li');
      var au = document.createElement('audio');
      var hf = document.createElement('a');

      au.controls = true;
      au.src = url;
      hf.href = url;
      hf.download = new Date().toISOString() + '.wav';
      hf.innerHTML = hf.download;
      li.appendChild(au);
      li.appendChild(hf);
      recordingslist.appendChild(li);
    });
  }

  window.onload = function init() {
    try {
      // webkit shim
      window.AudioContext = window.AudioContext || window.webkitAudioContext;
      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia;
      window.URL = window.URL || window.webkitURL;

      audio_context = new AudioContext;
      __log('Audio context set up.');
      __log('navigator.getUserMedia ' + (navigator.getUserMedia ? 'available.' : 'not present!'));
    } catch (e) {
      alert('No web audio support in this browser!');
    }

    navigator.getUserMedia({audio: true}, startUserMedia, function(e) {
      __log('No live audio input: ' + e);
    });
  };

-#%audio{id:'audio',width:300,height:350,controls:'controls',autoplay:'autoplay'}
-#
-#%input{type:'file',accept:'audio/*;capture=microphone'}
-#
-#:javascript
-#  navigator.getUserMedia({audio:true},onSuccess,onError)
-#  function onSuccess(stream) {
-#    var audio = document.querySelector('#audio')
-#    if(window.URL){
-#      audio.src = window.URL.createObjectURL(stream)
-#      window.stream = stream
-#    }
-#    else{
-#      audio.src = stream
-#      window.stream = stream
-#    }
-#    audio.play();
-#    window.URL.revokeObjectURL(stream)
-#  }
-#
-#  function onError() {
-#    alert('error')
-#  }

  // var audioCtx;
  // try
  // {
  //   audioCtx=new (window.AudioContext || window.webkitAudioContext)();
  // }
  // catch(e)
  // {
  //   console.log("Your browser does not support AudioContext!");
  // }
  // navigator.getUserMedia=(navigator.getUserMedia || navigator.webkitGetUserMedia ||
  //   navigator.mozGetUserMedia || navigator.msGetUserMedia);
  // if(navigator.getUserMedia)
  // {
  //   navigator.getUserMedia(
  //   {
  //     audio:true
  //   },
  //   function(stream)
  //   {
  //     console.log(stream)
  //   },
  //   function(err)
  //   {
  //     console.log("The following gUM error occured: "+err);
  //   });
  // }
  // else
  // {
  //   console.log("getUserMedia not supported on your browser!");
  // }
//</script>
